<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on Jeremy Sze的博客</title>
    <link>https://jeremy95-sze.github.io/categories/spring/</link>
    <description>Recent content in spring on Jeremy Sze的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 11 Nov 2018 08:36:54 -0700</lastBuildDate>
    
	<atom:link href="https://jeremy95-sze.github.io/categories/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JPQL注意点</title>
      <link>https://jeremy95-sze.github.io/post/JPQL%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Sun, 11 Nov 2018 08:36:54 -0700</pubDate>
      
      <guid>https://jeremy95-sze.github.io/post/JPQL%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8F%90%E7%A4%BA/</guid>
      <description>原生sql与jpql比较 基于数据库与基于对象的比较 1 2 3 //@Query(value = &amp;#34;select count (*) from tb_friend where userid=?1 and friendid=?2&amp;#34;,nativeQuery = true) @Query(value = &amp;#34;select count(f) from Friend f where f.userid = ?1 and f.friendid = ?2&amp;#34;) int findFriendCount(String userid,String friendid); 上面这两个sql一个使用原生sql，一个使用了jpql语句，原生sql基于数据库表来进行查询，这样要根据条件计算总记录数，那么数据库必须要有值，不然就会报错，比</description>
    </item>
    
    <item>
      <title>springboot总结</title>
      <link>https://jeremy95-sze.github.io/post/springboot%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 27 Oct 2018 08:36:54 -0700</pubDate>
      
      <guid>https://jeremy95-sze.github.io/post/springboot%E6%80%BB%E7%BB%93/</guid>
      <description>Spring简介 原有Spring优缺点分析 Spring是Java企业版（Java Enterprise Edition，JEE，也称J2EE）的轻量级代替品。无需开发重量级的Enterprise JavaBean（EJB），Spring为企业级Java开发提供了一种相对简单的方法，通过依赖注入和面向切面</description>
    </item>
    
    <item>
      <title>springDataJPA_动态查询总结</title>
      <link>https://jeremy95-sze.github.io/post/springdatajpa%E5%8A%A8%E6%80%81%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Mon, 22 Oct 2018 08:36:54 -0700</pubDate>
      
      <guid>https://jeremy95-sze.github.io/post/springdatajpa%E5%8A%A8%E6%80%81%E6%9F%A5%E8%AF%A2/</guid>
      <description>springDataJpa查询方式 简单查询 JpaRepository&amp;lt;Label,String&amp;gt; 条件查询,条件加分页查询 JpaSpecificationExecutor复杂查询和修改,单表和多表查询 @Query(“sql”,nativeQuery = true或者&amp;quot;jpql&amp;rdquo;) 修改时记得@Modify 命名查询 1 2</description>
    </item>
    
    <item>
      <title>springDataJPA总结</title>
      <link>https://jeremy95-sze.github.io/post/springDataJPA%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 21 Oct 2018 08:36:54 -0700</pubDate>
      
      <guid>https://jeremy95-sze.github.io/post/springDataJPA%E6%80%BB%E7%BB%93/</guid>
      <description>Spring Data JPA概述 Spring Data JPA 是 Spring 基于 ORM 框架、JPA 规范的基础上封装的一套JPA应用框架，可使开发者用极简的代码即可实现对数据库的访问和操作。它提供了包括增删改查等在内的常用功能，且易于扩展！学习并使用 Spring Data JPA 可以极大提高开发效率！ Spring Data JPA 让我们解脱了DAO层的操作，基本上所有CRUD都可以依</description>
    </item>
    
  </channel>
</rss>